/*
 * generated by Xtext
 */
grammar InternalZhu;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.alma.mde.statemachine.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.alma.mde.statemachine.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.alma.mde.statemachine.services.ZhuGrammarAccess;

}

@parser::members {
 
 	private ZhuGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ZhuGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopRegion
entryRuleTopRegion 
:
{ before(grammarAccess.getTopRegionRule()); }
	 ruleTopRegion
{ after(grammarAccess.getTopRegionRule()); } 
	 EOF 
;

// Rule TopRegion
ruleTopRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopRegionAccess().getGroup()); }
(rule__TopRegion__Group__0)
{ after(grammarAccess.getTopRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegion
entryRuleRegion 
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionAccess().getGroup()); }
(rule__Region__Group__0)
{ after(grammarAccess.getRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitions
entryRuleTransitions 
:
{ before(grammarAccess.getTransitionsRule()); }
	 ruleTransitions
{ after(grammarAccess.getTransitionsRule()); } 
	 EOF 
;

// Rule Transitions
ruleTransitions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionsAccess().getGroup()); }
(rule__Transitions__Group__0)
{ after(grammarAccess.getTransitionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStates
entryRuleStates 
:
{ before(grammarAccess.getStatesRule()); }
	 ruleStates
{ after(grammarAccess.getStatesRule()); } 
	 EOF 
;

// Rule States
ruleStates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatesAccess().getGroup()); }
(rule__States__Group__0)
{ after(grammarAccess.getStatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatesSeparated
entryRuleStatesSeparated 
:
{ before(grammarAccess.getStatesSeparatedRule()); }
	 ruleStatesSeparated
{ after(grammarAccess.getStatesSeparatedRule()); } 
	 EOF 
;

// Rule StatesSeparated
ruleStatesSeparated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatesSeparatedAccess().getGroup()); }
(rule__StatesSeparated__Group__0)
{ after(grammarAccess.getStatesSeparatedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDirection
entryRuleDirection 
:
{ before(grammarAccess.getDirectionRule()); }
	 ruleDirection
{ after(grammarAccess.getDirectionRule()); } 
	 EOF 
;

// Rule Direction
ruleDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
(rule__Direction__Alternatives)
{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggers
entryRuleTriggers 
:
{ before(grammarAccess.getTriggersRule()); }
	 ruleTriggers
{ after(grammarAccess.getTriggersRule()); } 
	 EOF 
;

// Rule Triggers
ruleTriggers
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggersAccess().getGroup()); }
(rule__Triggers__Group__0)
{ after(grammarAccess.getTriggersAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggersSeparated
entryRuleTriggersSeparated 
:
{ before(grammarAccess.getTriggersSeparatedRule()); }
	 ruleTriggersSeparated
{ after(grammarAccess.getTriggersSeparatedRule()); } 
	 EOF 
;

// Rule TriggersSeparated
ruleTriggersSeparated
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getGroup()); }
(rule__TriggersSeparated__Group__0)
{ after(grammarAccess.getTriggersSeparatedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Direction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectionAccess().getGreaterThanSignKeyword_0()); }

	'>' 

{ after(grammarAccess.getDirectionAccess().getGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getDirectionAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getDirectionAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getDiagramKeyword_0()); }

	'diagram' 

{ after(grammarAccess.getStateMachineAccess().getDiagramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRegionAssignment_2()); }
(rule__StateMachine__RegionAssignment_2)
{ after(grammarAccess.getStateMachineAccess().getRegionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TopRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__0__Impl
	rule__TopRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getRegionKeyword_0()); }

	'region' 

{ after(grammarAccess.getTopRegionAccess().getRegionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__1__Impl
	rule__TopRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTopRegionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__2__Impl
	rule__TopRegion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getStatesAssignment_2()); }
(rule__TopRegion__StatesAssignment_2)
{ after(grammarAccess.getTopRegionAccess().getStatesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopRegion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__3__Impl
	rule__TopRegion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getRegionsAssignment_3()); }
(rule__TopRegion__RegionsAssignment_3)*
{ after(grammarAccess.getTopRegionAccess().getRegionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopRegion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__4__Impl
	rule__TopRegion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getTransitionsAssignment_4()); }
(rule__TopRegion__TransitionsAssignment_4)?
{ after(grammarAccess.getTopRegionAccess().getTransitionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopRegion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopRegion__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getTopRegionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Region__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__0__Impl
	rule__Region__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getRegionKeyword_0()); }

	'region' 

{ after(grammarAccess.getRegionAccess().getRegionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__1__Impl
	rule__Region__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getNameAssignment_1()); }
(rule__Region__NameAssignment_1)
{ after(grammarAccess.getRegionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__2__Impl
	rule__Region__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRegionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__3__Impl
	rule__Region__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getStatesAssignment_3()); }
(rule__Region__StatesAssignment_3)
{ after(grammarAccess.getRegionAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__4__Impl
	rule__Region__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getRegionsAssignment_4()); }
(rule__Region__RegionsAssignment_4)*
{ after(grammarAccess.getRegionAccess().getRegionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__5__Impl
	rule__Region__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getTransitionsAssignment_5()); }
(rule__Region__TransitionsAssignment_5)?
{ after(grammarAccess.getRegionAccess().getTransitionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getRegionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Transitions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__0__Impl
	rule__Transitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getTransitionsKeyword_0()); }

	'transitions' 

{ after(grammarAccess.getTransitionsAccess().getTransitionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__1__Impl
	rule__Transitions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTransitionsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__2__Impl
	rule__Transitions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTransitionsAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__3__Impl
	rule__Transitions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getFirstTransitionAssignment_3()); }
(rule__Transitions__FirstTransitionAssignment_3)
{ after(grammarAccess.getTransitionsAccess().getFirstTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__4__Impl
	rule__Transitions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getGroup_4()); }
(rule__Transitions__Group_4__0)*
{ after(grammarAccess.getTransitionsAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getTransitionsAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Transitions__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group_4__0__Impl
	rule__Transitions__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getTransitionsAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getFollowingTransitionsAssignment_4_1()); }
(rule__Transitions__FollowingTransitionsAssignment_4_1)
{ after(grammarAccess.getTransitionsAccess().getFollowingTransitionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStatesKeyword_1()); }

	'states' 

{ after(grammarAccess.getTransitionAccess().getStatesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getTransitionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceAssignment_3()); }
(rule__Transition__SourceAssignment_3)
{ after(grammarAccess.getTransitionAccess().getSourceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_5()); }
(rule__Transition__TargetAssignment_5)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
	rule__Transition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggersAssignment_7()); }
(rule__Transition__TriggersAssignment_7)?
{ after(grammarAccess.getTransitionAccess().getTriggersAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__8__Impl
	rule__Transition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_8()); }
(rule__Transition__Group_8__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__9__Impl
	rule__Transition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_9()); }
(rule__Transition__Group_9__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Transition__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__0__Impl
	rule__Transition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardKeyword_8_0()); }

	'guard' 

{ after(grammarAccess.getTransitionAccess().getGuardKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__1__Impl
	rule__Transition__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getColonKeyword_8_1()); }

	':' 

{ after(grammarAccess.getTransitionAccess().getColonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__2__Impl
	rule__Transition__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardAssignment_8_2()); }
(rule__Transition__GuardAssignment_8_2)
{ after(grammarAccess.getTransitionAccess().getGuardAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_8_3()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_9__0__Impl
	rule__Transition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getBehaviourKeyword_9_0()); }

	'behaviour' 

{ after(grammarAccess.getTransitionAccess().getBehaviourKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_9__1__Impl
	rule__Transition__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getColonKeyword_9_1()); }

	':' 

{ after(grammarAccess.getTransitionAccess().getColonKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getBehaviourAssignment_9_2()); }
(rule__Transition__BehaviourAssignment_9_2)
{ after(grammarAccess.getTransitionAccess().getBehaviourAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__States__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__0__Impl
	rule__States__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesKeyword_0()); }

	'states' 

{ after(grammarAccess.getStatesAccess().getStatesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__1__Impl
	rule__States__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStatesAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__2__Impl
	rule__States__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getStatesAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__3__Impl
	rule__States__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesAssignment_3()); }
(rule__States__StatesAssignment_3)
{ after(grammarAccess.getStatesAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getStatesAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StatesSeparated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesSeparated__Group__0__Impl
	rule__StatesSeparated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getFirstStateAssignment_0()); }
(rule__StatesSeparated__FirstStateAssignment_0)
{ after(grammarAccess.getStatesSeparatedAccess().getFirstStateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesSeparated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesSeparated__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getGroup_1()); }
(rule__StatesSeparated__Group_1__0)*
{ after(grammarAccess.getStatesSeparatedAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatesSeparated__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesSeparated__Group_1__0__Impl
	rule__StatesSeparated__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getStatesSeparatedAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatesSeparated__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatesSeparated__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getFollowingStatesAssignment_1_1()); }
(rule__StatesSeparated__FollowingStatesAssignment_1_1)
{ after(grammarAccess.getStatesSeparatedAccess().getFollowingStatesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getDirectionParserRuleCall_0()); }
(	ruleDirection)?
{ after(grammarAccess.getStateAccess().getDirectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Triggers__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__0__Impl
	rule__Triggers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getTriggersKeyword_0()); }

	'triggers' 

{ after(grammarAccess.getTriggersAccess().getTriggersKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Triggers__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__1__Impl
	rule__Triggers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTriggersAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Triggers__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__2__Impl
	rule__Triggers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTriggersAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Triggers__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__3__Impl
	rule__Triggers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getTriggersAssignment_3()); }
(rule__Triggers__TriggersAssignment_3)
{ after(grammarAccess.getTriggersAccess().getTriggersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Triggers__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__4__Impl
	rule__Triggers__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTriggersAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Triggers__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Triggers__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getTriggersAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TriggersSeparated__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggersSeparated__Group__0__Impl
	rule__TriggersSeparated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getFirstTriggerAssignment_0()); }
(rule__TriggersSeparated__FirstTriggerAssignment_0)
{ after(grammarAccess.getTriggersSeparatedAccess().getFirstTriggerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggersSeparated__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggersSeparated__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getGroup_1()); }
(rule__TriggersSeparated__Group_1__0)*
{ after(grammarAccess.getTriggersSeparatedAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TriggersSeparated__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggersSeparated__Group_1__0__Impl
	rule__TriggersSeparated__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTriggersSeparatedAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggersSeparated__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggersSeparated__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getFollowingTriggersAssignment_1_1()); }
(rule__TriggersSeparated__FollowingTriggersAssignment_1_1)
{ after(grammarAccess.getTriggersSeparatedAccess().getFollowingTriggersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__StateMachine__RegionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRegionTopRegionParserRuleCall_2_0()); }
	ruleTopRegion{ after(grammarAccess.getStateMachineAccess().getRegionTopRegionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getStatesStatesParserRuleCall_2_0()); }
	ruleStates{ after(grammarAccess.getTopRegionAccess().getStatesStatesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__RegionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getRegionsRegionParserRuleCall_3_0()); }
	ruleRegion{ after(grammarAccess.getTopRegionAccess().getRegionsRegionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopRegion__TransitionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopRegionAccess().getTransitionsTransitionsParserRuleCall_4_0()); }
	ruleTransitions{ after(grammarAccess.getTopRegionAccess().getTransitionsTransitionsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRegionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getStatesStatesParserRuleCall_3_0()); }
	ruleStates{ after(grammarAccess.getRegionAccess().getStatesStatesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__RegionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getRegionsRegionParserRuleCall_4_0()); }
	ruleRegion{ after(grammarAccess.getRegionAccess().getRegionsRegionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__TransitionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getTransitionsTransitionsParserRuleCall_5_0()); }
	ruleTransitions{ after(grammarAccess.getRegionAccess().getTransitionsTransitionsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__FirstTransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getFirstTransitionTransitionParserRuleCall_3_0()); }
	ruleTransition{ after(grammarAccess.getTransitionsAccess().getFirstTransitionTransitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__FollowingTransitionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getFollowingTransitionsTransitionParserRuleCall_4_1_0()); }
	ruleTransition{ after(grammarAccess.getTransitionsAccess().getFollowingTransitionsTransitionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getSourceStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getSourceStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateCrossReference_5_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggersAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggersTriggersParserRuleCall_7_0()); }
	ruleTriggers{ after(grammarAccess.getTransitionAccess().getTriggersTriggersParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardSTRINGTerminalRuleCall_8_2_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getGuardSTRINGTerminalRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__BehaviourAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getBehaviourSTRINGTerminalRuleCall_9_2_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getBehaviourSTRINGTerminalRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__States__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesStatesSeparatedParserRuleCall_3_0()); }
	ruleStatesSeparated{ after(grammarAccess.getStatesAccess().getStatesStatesSeparatedParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__FirstStateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getFirstStateStateParserRuleCall_0_0()); }
	ruleState{ after(grammarAccess.getStatesSeparatedAccess().getFirstStateStateParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSeparated__FollowingStatesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesSeparatedAccess().getFollowingStatesStateParserRuleCall_1_1_0()); }
	ruleState{ after(grammarAccess.getStatesSeparatedAccess().getFollowingStatesStateParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Triggers__TriggersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersAccess().getTriggersTriggersSeparatedParserRuleCall_3_0()); }
	ruleTriggersSeparated{ after(grammarAccess.getTriggersAccess().getTriggersTriggersSeparatedParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__FirstTriggerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getFirstTriggerSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getTriggersSeparatedAccess().getFirstTriggerSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggersSeparated__FollowingTriggersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggersSeparatedAccess().getFollowingTriggersSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTriggersSeparatedAccess().getFollowingTriggersSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


