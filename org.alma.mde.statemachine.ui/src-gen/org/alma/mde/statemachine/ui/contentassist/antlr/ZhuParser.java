/*
 * generated by Xtext
 */
package org.alma.mde.statemachine.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.alma.mde.statemachine.services.ZhuGrammarAccess;

public class ZhuParser extends AbstractContentAssistParser {
	
	@Inject
	private ZhuGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.alma.mde.statemachine.ui.contentassist.antlr.internal.InternalZhuParser createParser() {
		org.alma.mde.statemachine.ui.contentassist.antlr.internal.InternalZhuParser result = new org.alma.mde.statemachine.ui.contentassist.antlr.internal.InternalZhuParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDirectionAccess().getAlternatives(), "rule__Direction__Alternatives");
					put(grammarAccess.getStateMachineAccess().getGroup(), "rule__StateMachine__Group__0");
					put(grammarAccess.getTopRegionAccess().getGroup(), "rule__TopRegion__Group__0");
					put(grammarAccess.getRegionAccess().getGroup(), "rule__Region__Group__0");
					put(grammarAccess.getTransitionsAccess().getGroup(), "rule__Transitions__Group__0");
					put(grammarAccess.getTransitionsAccess().getGroup_4(), "rule__Transitions__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_8(), "rule__Transition__Group_8__0");
					put(grammarAccess.getTransitionAccess().getGroup_9(), "rule__Transition__Group_9__0");
					put(grammarAccess.getStatesAccess().getGroup(), "rule__States__Group__0");
					put(grammarAccess.getStatesSeparatedAccess().getGroup(), "rule__StatesSeparated__Group__0");
					put(grammarAccess.getStatesSeparatedAccess().getGroup_1(), "rule__StatesSeparated__Group_1__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getTriggersAccess().getGroup(), "rule__Triggers__Group__0");
					put(grammarAccess.getTriggersSeparatedAccess().getGroup(), "rule__TriggersSeparated__Group__0");
					put(grammarAccess.getTriggersSeparatedAccess().getGroup_1(), "rule__TriggersSeparated__Group_1__0");
					put(grammarAccess.getStateMachineAccess().getRegionAssignment_2(), "rule__StateMachine__RegionAssignment_2");
					put(grammarAccess.getTopRegionAccess().getStatesAssignment_2(), "rule__TopRegion__StatesAssignment_2");
					put(grammarAccess.getTopRegionAccess().getRegionsAssignment_3(), "rule__TopRegion__RegionsAssignment_3");
					put(grammarAccess.getTopRegionAccess().getTransitionsAssignment_4(), "rule__TopRegion__TransitionsAssignment_4");
					put(grammarAccess.getRegionAccess().getNameAssignment_1(), "rule__Region__NameAssignment_1");
					put(grammarAccess.getRegionAccess().getStatesAssignment_3(), "rule__Region__StatesAssignment_3");
					put(grammarAccess.getRegionAccess().getRegionsAssignment_4(), "rule__Region__RegionsAssignment_4");
					put(grammarAccess.getRegionAccess().getTransitionsAssignment_5(), "rule__Region__TransitionsAssignment_5");
					put(grammarAccess.getTransitionsAccess().getFirstTransitionAssignment_3(), "rule__Transitions__FirstTransitionAssignment_3");
					put(grammarAccess.getTransitionsAccess().getFollowingTransitionsAssignment_4_1(), "rule__Transitions__FollowingTransitionsAssignment_4_1");
					put(grammarAccess.getTransitionAccess().getSourceAssignment_3(), "rule__Transition__SourceAssignment_3");
					put(grammarAccess.getTransitionAccess().getTargetAssignment_5(), "rule__Transition__TargetAssignment_5");
					put(grammarAccess.getTransitionAccess().getTriggersAssignment_7(), "rule__Transition__TriggersAssignment_7");
					put(grammarAccess.getTransitionAccess().getGuardAssignment_8_2(), "rule__Transition__GuardAssignment_8_2");
					put(grammarAccess.getTransitionAccess().getBehaviourAssignment_9_2(), "rule__Transition__BehaviourAssignment_9_2");
					put(grammarAccess.getStatesAccess().getStatesAssignment_3(), "rule__States__StatesAssignment_3");
					put(grammarAccess.getStatesSeparatedAccess().getFirstStateAssignment_0(), "rule__StatesSeparated__FirstStateAssignment_0");
					put(grammarAccess.getStatesSeparatedAccess().getFollowingStatesAssignment_1_1(), "rule__StatesSeparated__FollowingStatesAssignment_1_1");
					put(grammarAccess.getStateAccess().getNameAssignment_1(), "rule__State__NameAssignment_1");
					put(grammarAccess.getTriggersAccess().getTriggersAssignment_3(), "rule__Triggers__TriggersAssignment_3");
					put(grammarAccess.getTriggersSeparatedAccess().getFirstTriggerAssignment_0(), "rule__TriggersSeparated__FirstTriggerAssignment_0");
					put(grammarAccess.getTriggersSeparatedAccess().getFollowingTriggersAssignment_1_1(), "rule__TriggersSeparated__FollowingTriggersAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.alma.mde.statemachine.ui.contentassist.antlr.internal.InternalZhuParser typedParser = (org.alma.mde.statemachine.ui.contentassist.antlr.internal.InternalZhuParser) parser;
			typedParser.entryRuleStateMachine();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ZhuGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ZhuGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
